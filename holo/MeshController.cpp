//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : MeshController.cpp
//  @ Date : 2/23/2014
//  @ Author : SRB
//
//


#include "MeshController.h"

MeshController::MeshController(HoMesh* mesh, double exp_conv_constant, int n_batches_to_check):
	_required_conv_rate(exp_conv_constant),
	_mesh(mesh), 
	_n_batches_to_check(n_batches_to_check),
	_batch_residual_norms()
{
	createConnectivityArray();
}

void MeshController::computeJumpError()
{

}

void MeshController::createConnectivityArray()
{
	//loop over elements
	std::vector<ECMCElement1D*>* elements = _mesh->getElements();
	std::vector<ECMCElement1D*>::iterator it_el;
	for (it_el = elements->begin(); it_el != elements->end(); it_el++)
	{
		//TODO create the connectivity array
	}
}

void MeshController::storeResidualNorm(double residual_norm)
{
	if (_batch_residual_norms.size() == (_n_batches_to_check+1)) //one extra since you need ratios to check refinement
	{
		_batch_residual_norms.erase(_batch_residual_norms.begin()); //remove the oldest element
	}
	_batch_residual_norms.push_back(residual_norm);
}

void MeshController::refineMesh()
{
	if (checkConvergence())
	{
		//Refine mesh
	}

}

bool MeshController::checkConvergence()
{
	if (_batch_residual_norms.size() != (_n_batches_to_check + 1))
	{
		return false; //not enough batches to check convergence, because of noise
	}
	else
	{

	}
}