//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : LinDiscSource.h
//  @ Date : 2/8/2014
//  @ Author : 
//
//


#if !defined(_LINDISCSOURCE_H)
#define _LINDISCSOURCE_H

#include "Source.h"
#include "AliasSampler.h"

class LinDiscSource : public Source
{
private:

	AliasSampler* _alias_sampler; //pointer because it is dynamically allocated, may not be called if stratified sampling is used
    std::vector<std::vector<double>> _total_src_nodal_values; //nodal values of external source + (possibly scattering source), depending on method
	
public:
	virtual void sampleSourceParticle(); 
	LinDiscSource(Particle1D * particle, string sampling_method);

};

#endif  //_LINDISCSOURCE_H
